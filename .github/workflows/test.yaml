on:
  workflow_call:
    inputs:
      runs-on_value:
        required: true
        type: string
      artifacts_version:
        required: true
        type: string
      artifacts_run_id:
        required: false
        type: string
        default: ${{ github.run_id }}
      artifacts_repository:
        required: false
        type: string
        default: ${{ github.repository }}
      catboost_package_name:
        required: false
        type: string
        default: catboost_dev
      catboost_package_version:
        required: true
        type: string

jobs:
  test:
    runs-on: ${{ inputs.runs-on_value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: catboost

      # TODO: running python package tests for all supported python versions

      - name: Setup Python 3.12 for running tests
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Env setup
        shell: pwsh
        run: |
          New-Item -Path catboost_python_package_dist -ItemType Directory
          New-Item -Path build_native_root/catboost -ItemType Directory
          Set-Location -LiteralPath ${{ github.workspace }}/build_native_root/catboost
          New-Item -Path app -ItemType Directory
          New-Item -Path tools -ItemType Directory

      - if: inputs.runs-on_value == 'ubuntu-latest'
        uses: actions/download-artifact@v4
        with:
          name: catboost-cli-linux-x86_64-${{ inputs.artifacts_version }}
          path: build_native_root/catboost/app/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'macos-13'
        uses: actions/download-artifact@v4
        with:
          name: catboost-cli-darwin-universal2-${{ inputs.artifacts_version }}
          path: build_native_root/catboost/app/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'windows-2022'
        uses: actions/download-artifact@v4
        with:
          name: catboost-cli-windows-x86_64-${{ inputs.artifacts_version }}
          path: build_native_root/catboost/app/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'ubuntu-latest'
        name: Download python package for Ubuntu
        uses: actions/download-artifact@v4
        with:
          name: catboost-python-package-dist-cp312-cp312-manylinux2014_x86_64-${{ inputs.artifacts_version }}
          path: catboost_python_package_dist/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'macos-13'
        name: Download python package for macOS
        uses: actions/download-artifact@v4
        with:
          name: catboost-python-package-dist-cp312-cp312-macosx_11_0_universal2-${{ inputs.artifacts_version }}
          path: catboost_python_package_dist/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'windows-2022'
        name: Download python package for Windows
        uses: actions/download-artifact@v4
        with:
          name: catboost-python-package-dist-cp312-cp312-win_amd64-${{ inputs.artifacts_version }}
          path: catboost_python_package_dist/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'ubuntu-latest'
        uses: actions/download-artifact@v4
        with:
          name: catboost-test-tools-linux-x86_64-${{ inputs.artifacts_version }}
          path: build_native_root/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'macos-13'
        uses: actions/download-artifact@v4
        with:
          name: catboost-test-tools-darwin-universal2-${{ inputs.artifacts_version }}
          path: build_native_root/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: inputs.runs-on_value == 'windows-2022'
        uses: actions/download-artifact@v4
        with:
          name: catboost-test-tools-windows-x86_64-${{ inputs.artifacts_version }}
          path: build_native_root/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - name: Prepare binaries from artifacts
        shell: pwsh
        run: |
          if ("${{ inputs.runs-on_value }}" -ne "windows-2022") {
            chmod a+x ${{ github.workspace }}/build_native_root/catboost/app/catboost
          }
          Set-Location -LiteralPath ${{ github.workspace }}/build_native_root/catboost/tools
          foreach($tool in 'limited_precision_dsv_diff','limited_precision_json_diff','model_comparator') {
            Move-Item ${{ github.workspace }}/build_native_root/${tool}
            if ("${{ inputs.runs-on_value }}" -ne "windows-2022") {
              chmod a+x $tool/$tool
            }
          }

      - name: Run pytest
        shell: pwsh
        run: |
          python -m pip install testpath pytest 'numpy<2.0' pandas catboost
          $Env:CMAKE_SOURCE_DIR = Join-Path ${{ github.workspace }} catboost
          $Env:CMAKE_BINARY_DIR = Join-Path ${{ github.workspace }} build_native_root
          $Env:TEST_OUTPUT_DIR = Join-Path ${{ github.workspace }} test_output_pytest
          $Env:HAVE_CUDA = 0
          Set-Location -LiteralPath ${{ github.workspace }}/catboost/catboost/pytest
          python -m pytest

      - name: Run python package tests
        shell: pwsh
        run: |
          python -m pip install testpath pytest 'numpy<2.0' pandas ipywidgets scikit-learn
          python -m pip uninstall -y catboost
          python -m pip install ${{ inputs.catboost_package_name }} -f ${{ github.workspace }}/catboost_python_package_dist/
          $Env:CMAKE_SOURCE_DIR = Join-Path ${{ github.workspace }} catboost
          $Env:CMAKE_BINARY_DIR = Join-Path ${{ github.workspace }} build_native_root
          $Env:TEST_OUTPUT_DIR = Join-Path ${{ github.workspace }} test_output_pytest
          Set-Location -LiteralPath ${{ github.workspace }}/catboost/catboost/python-package/ut/medium
          python -m pytest
